package com.employee.admin.config;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.employee.entities.Admin;
import com.employee.service.AdminService;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

	@Autowired
	private AdminService adminService;
	
	 @Bean
	    public PasswordEncoder passwordEncoder() {
	        return new BCryptPasswordEncoder();
	    }
	 
	 @Override
	   protected void configure(AuthenticationManagerBuilder auth) throws Exception {
	        auth.userDetailsService(username -> {
	            Admin admin = adminService.findByUsername(username);
	            return new org.springframework.security.core.userdetails.User(admin.getUsername(), admin.getPassword(), new ArrayList<>());
	        });
	    }
	 
	  @Override
	    protected void configure(HttpSecurity http) throws Exception {
	        http
	            .csrf().disable()
	            .authorizeRequests()
	            .antMatchers("/login", "/register").permitAll()
	            .anyRequest().authenticated()
	            .and()
	            .formLogin()
	            .loginProcessingUrl("/login")
	            .and()
	            .logout()
	            .logoutUrl("/logout");
	    }
}
